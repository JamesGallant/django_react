on:
  push:
  pull_request:
    branches:
      - main
      - dev

jobs:
  accounts_service_testing:
    runs-on: ubuntu-latest
    name: Unit tests for the accounts
    environment: develop

    services:
      postgres_database:
        # Docker Hub image
        image: postgres
        # Provide the password for
        env:
          POSTGRES_PASSWORD: ${{secrets.SQL_PASSWORD}}
          POSTGRES_USER:  ${{secrets.SQL_USER}}
          POSTGRES_DB: postgres_db_dev
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - '5432:5432'

    steps:
      - name: Checkout code base
        uses: actions/checkout@v2

      - name: Setup Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Setup cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r accounts/requirements/requirements.txt
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Create migrations and migrate to DB
        env:
          DJANGO_ALLOWED_HOSTS: localhost 127.0.0.1 https://localhost:8000/ 127.0.0.1:8000 0.0.0.0 https://localhost:8001/
        run: |
          python accounts/src/manage.py makemigrations users
          python accounts/src/manage.py migrate