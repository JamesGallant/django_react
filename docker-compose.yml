version: '3.7'

services:
  frontend:
    build:
     context: ./frontend
     dockerfile: ./Docker/Dockerfile
    image: react_frontend_service
    container_name: frontend
    restart: always
    command: npm start
    volumes:
      - ./frontend/:/usr/src/app/
      - usr/src/app/node_modules
    ports:
      - "8000:3000"
    env_file:
      - frontend/environments/.develpment.env
    depends_on:
      - postgres_database

  backend_accounts:
    build:
     context: accounts
     dockerfile: ./Docker/Dockerfile
    image: backend_accounts
    container_name: backend_accounts
    restart: always
    command: python ./src/manage.py runserver 0.0.0.0:8000
    volumes:
      - ./accounts/:/usr/src/app/
    ports:
      - "8001:8000"
    env_file:
      - accounts/environments/.development.env
    depends_on:
      - postgres_database

  postgres_database:
    image: postgres:12.0-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgres_db_dev

  pgadmin:
    image: dpage/pgadmin4:4.18
    restart: always
    ports:
      - "8010:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin/
    links:
      - "postgres_database:pgsql-server"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: mailhog
    ports:
      - "8011:8025"
      - "1025:1025"

volumes:
  postgres_data:
  pgadmin_data:

